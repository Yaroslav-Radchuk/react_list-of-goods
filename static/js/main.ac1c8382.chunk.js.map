{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","resetVisible","classVisible","sortBy","goods","showReset","setState","sortAlpha","sortLength","reverse","reset","this","visibleGoods","sort","alpha","length","localeCompare","className","type","classNames","ALPABET","onClick","LENGTH","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,YAAAA,E,kBAAAA,E,iBAAAA,M,KAcE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,cAAc,EACdC,aAAc,GACdC,OAAQ,GACRC,MAAOP,GANX,EASEQ,UAAY,WACV,EAAKC,SAAS,CAAEL,cAAc,KAVlC,EAaEM,UAAY,WACV,EAAKD,SAAS,CACZH,OAAQ,QACRF,cAAc,EACdC,aAAc,aAjBpB,EAqBEM,WAAa,WACX,EAAKF,SAAS,CACZH,OAAQ,SACRF,cAAc,EACdC,aAAc,YAzBpB,EA6BEO,QAAU,WACR,EAAKH,UAAS,SAAAP,GAAK,MAAK,CACtBC,YAAaD,EAAMC,WACnBC,cAAeF,EAAMC,gBAhC3B,EAoCEU,MAAQ,WACN,EAAKJ,SAAS,CACZF,MAAOP,EACPG,YAAY,EACZG,OAAQ,GACRF,cAAc,EACdC,aAAc,MA1CpB,4CA8CE,WACE,MAMIS,KAAKZ,MALPC,EADF,EACEA,WACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,aACAC,EAJF,EAIEA,OACAC,EALF,EAKEA,MAGIQ,EAAY,YAAOR,GAmBzB,OAjBAQ,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQZ,GACN,IAAK,QACH,OAAOW,EAAME,cAAcD,GAE7B,IAAK,SACH,OAAOD,EAAMX,GAAUY,EAAOZ,GAEhC,QACE,OAAO,MAITH,GACFY,EAAaH,UAIb,sBAAKQ,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,SAAU,CAC9B,mBAAoBjB,IAAiBN,EAASwB,QAC9C,UAAWlB,IAAiBN,EAASwB,UAEvCC,QAASV,KAAKJ,UANhB,iCAWA,wBACEW,KAAK,SACLD,UAAWE,IAAW,SAAU,CAC9B,sBAAuBjB,IAAiBN,EAAS0B,OACjD,aAAcpB,IAAiBN,EAAS0B,SAE1CD,QAASV,KAAKH,WANhB,4BAWA,wBACEU,KAAK,SACLD,UAAWE,IAAW,SAAU,CAC9B,uBAAwBnB,EACxB,aAAcA,IAEhBqB,QAASV,KAAKF,QANhB,qBAWCR,GACC,wBACEiB,KAAK,SACLD,UAAU,4BACVI,QAASV,KAAKD,MAHhB,sBAUJ,6BACE,6BACGE,EAAaW,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,iBA9HrB,GAAyBC,IAAMC,WC7B/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ac1c8382.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'NONE',\n  ALPABET = 'ALPABET',\n  LENGTH = 'LENGTH',\n}\n\ntype State = {\n  isReversed: boolean,\n  resetVisible: boolean,\n  classVisible: string,\n  sortBy: string,\n  goods: string[],\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    resetVisible: false,\n    classVisible: '',\n    sortBy: '',\n    goods: goodsFromServer,\n  };\n\n  showReset = () => {\n    this.setState({ resetVisible: true });\n  };\n\n  sortAlpha = () => {\n    this.setState({\n      sortBy: 'alpha',\n      resetVisible: true,\n      classVisible: 'ALPABET',\n    });\n  };\n\n  sortLength = () => {\n    this.setState({\n      sortBy: 'length',\n      resetVisible: true,\n      classVisible: 'LENGTH',\n    });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n      resetVisible: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      goods: goodsFromServer,\n      isReversed: false,\n      sortBy: '',\n      resetVisible: false,\n      classVisible: '',\n    });\n  };\n\n  render() {\n    const {\n      isReversed,\n      resetVisible,\n      classVisible,\n      sortBy,\n      goods,\n    } = this.state;\n\n    const visibleGoods = [...goods];\n\n    visibleGoods.sort((alpha, length) => {\n      switch (sortBy) {\n        case 'alpha':\n          return alpha.localeCompare(length);\n\n        case 'length':\n          return alpha[sortBy] - length[sortBy];\n\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames('button', {\n              'is-info is-light': classVisible !== SortType.ALPABET,\n              'is-info': classVisible === SortType.ALPABET,\n            })}\n            onClick={this.sortAlpha}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button', {\n              'is-success is-light': classVisible !== SortType.LENGTH,\n              'is-success': classVisible === SortType.LENGTH,\n            })}\n            onClick={this.sortLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button', {\n              'is-warning is-light': !isReversed,\n              'is-warning': isReversed,\n            })}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {resetVisible && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {visibleGoods.map(good => (\n              <li\n                data-cy=\"Good\"\n                key={good}\n              >\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}