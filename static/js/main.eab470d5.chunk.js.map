{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortBy","sortAlpha","setState","ALPABET","sortLength","LENGTH","reverse","reset","this","goods","visibleGoods","sort","a","b","localeCompare","getVisibleGoods","className","type","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,iGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,YAAAA,E,mBAAAA,E,iBAAAA,M,KAkCE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,OAAQ,IAHZ,EAMEC,UAAY,WACV,EAAKC,SAAS,CACZF,OAAQL,EAASQ,WARvB,EAYEC,WAAa,WACX,EAAKF,SAAS,CACZF,OAAQL,EAASU,UAdvB,EAkBEC,QAAU,WACR,EAAKJ,UAAS,SAAAJ,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBApBzB,EAwBEQ,MAAQ,WACN,EAAKL,SAAS,CACZH,YAAY,EACZC,OAAQ,MA3Bd,4CA+BE,WACE,MAGIQ,KAAKV,MAFPC,EADF,EACEA,WACAC,EAFF,EAEEA,OAGIS,EA5DH,YAEJ,IADCT,EACF,EADEA,OAAQD,EACV,EADUA,WAEJW,EAAe,UAAId,GAAiBe,MAAK,SAACC,EAAGC,GACjD,OAAQb,GACN,KAAKL,EAASQ,QACZ,OAAOS,EAAEE,cAAcD,GAEzB,KAAKlB,EAASU,OACZ,OAAOO,EAAEZ,GAAUa,EAAEb,GAEvB,QACE,OAAO,MAQb,OAJID,GACFW,EAAaJ,UAGRI,EAwCSK,CAAgB,CAC5Bf,SACAD,eAGF,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,SAAU,CAC9B,mBAAoBlB,IAAWL,EAASQ,QACxC,UAAWH,IAAWL,EAASQ,UAEjCgB,QAASX,KAAKP,UANhB,iCAWA,wBACEgB,KAAK,SACLD,UAAWE,IAAW,SAAU,CAC9B,sBAAuBlB,IAAWL,EAASU,OAC3C,aAAcL,IAAWL,EAASU,SAEpCc,QAASX,KAAKJ,WANhB,4BAWA,wBACEa,KAAK,SACLD,UAAWE,IAAW,SAAU,CAC9B,uBAAwBnB,EACxB,aAAcA,IAEhBoB,QAASX,KAAKF,QANhB,sBAWEN,GAAUD,IACV,wBACEkB,KAAK,SACLD,UAAU,4BACVG,QAASX,KAAKD,MAHhB,sBAUJ,6BACE,6BACGE,EAAMW,KAAI,SAAAC,GAAI,OACb,oBACE,UAAQ,OADV,SAIGA,GAFIA,iBA9FrB,GAAyBC,IAAMC,WCjD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.eab470d5.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'none',\n  ALPABET = 'alphabet',\n  LENGTH = 'length',\n}\n\ntype State = {\n  isReversed: boolean,\n  sortBy: string,\n};\n\nexport function getVisibleGoods(\n  { sortBy, isReversed }: State,\n) {\n  const visibleGoods = [...goodsFromServer].sort((a, b) => {\n    switch (sortBy) {\n      case SortType.ALPABET:\n        return a.localeCompare(b);\n\n      case SortType.LENGTH:\n        return a[sortBy] - b[sortBy];\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortBy: '',\n  };\n\n  sortAlpha = () => {\n    this.setState({\n      sortBy: SortType.ALPABET,\n    });\n  };\n\n  sortLength = () => {\n    this.setState({\n      sortBy: SortType.LENGTH,\n    });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortBy: '',\n    });\n  };\n\n  render() {\n    const {\n      isReversed,\n      sortBy,\n    } = this.state;\n\n    const goods = getVisibleGoods({\n      sortBy,\n      isReversed,\n    });\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames('button', {\n              'is-info is-light': sortBy !== SortType.ALPABET,\n              'is-info': sortBy === SortType.ALPABET,\n            })}\n            onClick={this.sortAlpha}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button', {\n              'is-success is-light': sortBy !== SortType.LENGTH,\n              'is-success': sortBy === SortType.LENGTH,\n            })}\n            onClick={this.sortLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button', {\n              'is-warning is-light': !isReversed,\n              'is-warning': isReversed,\n            })}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(sortBy || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {goods.map(good => (\n              <li\n                data-cy=\"Good\"\n                key={good}\n              >\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}