{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortBy","goods","sortAlpha","setState","ALPABET","sortLength","LENGTH","reverse","reset","this","visibleGoods","sort","a","b","localeCompare","className","type","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,YAAAA,E,mBAAAA,E,iBAAAA,M,KAYE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,OAAQ,GACRC,MAAOL,GAJX,EAOEM,UAAY,WACV,EAAKC,SAAS,CACZH,OAAQL,EAASS,WATvB,EAaEC,WAAa,WACX,EAAKF,SAAS,CACZH,OAAQL,EAASW,UAfvB,EAmBEC,QAAU,WACR,EAAKJ,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBArBzB,EAyBES,MAAQ,WACN,EAAKL,SAAS,CACZF,MAAOL,EACPG,YAAY,EACZC,OAAQ,MA7Bd,4CAiCE,WACE,MAIIS,KAAKX,MAHPC,EADF,EACEA,WACAC,EAFF,EAEEA,OACAC,EAHF,EAGEA,MAGIS,EAAY,YAAOT,GAmBzB,OAjBAS,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQb,GACN,IAAK,WACH,OAAOY,EAAEE,cAAcD,GAEzB,IAAK,SACH,OAAOD,EAAEZ,GAAUa,EAAEb,GAEvB,QACE,OAAO,MAITD,GACFW,EAAaH,UAIb,sBAAKQ,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,SAAU,CAC9B,mBAAoBjB,IAAWL,EAASS,QACxC,UAAWJ,IAAWL,EAASS,UAEjCc,QAAST,KAAKP,UANhB,iCAWA,wBACEc,KAAK,SACLD,UAAWE,IAAW,SAAU,CAC9B,sBAAuBjB,IAAWL,EAASW,OAC3C,aAAcN,IAAWL,EAASW,SAEpCY,QAAST,KAAKJ,WANhB,4BAWA,wBACEW,KAAK,SACLD,UAAWE,IAAW,SAAU,CAC9B,uBAAwBlB,EACxB,aAAcA,IAEhBmB,QAAST,KAAKF,QANhB,sBAWEP,GAAUD,IACV,wBACEiB,KAAK,SACLD,UAAU,4BACVG,QAAST,KAAKD,MAHhB,sBAUJ,6BACE,6BACGE,EAAaS,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,iBA/GrB,GAAyBC,IAAMC,WC3B/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f5e6dd4a.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'none',\n  ALPABET = 'alphabet',\n  LENGTH = 'length',\n}\n\ntype State = {\n  isReversed: boolean,\n  sortBy: string,\n  goods: string[],\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortBy: '',\n    goods: goodsFromServer,\n  };\n\n  sortAlpha = () => {\n    this.setState({\n      sortBy: SortType.ALPABET,\n    });\n  };\n\n  sortLength = () => {\n    this.setState({\n      sortBy: SortType.LENGTH,\n    });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      goods: goodsFromServer,\n      isReversed: false,\n      sortBy: '',\n    });\n  };\n\n  render() {\n    const {\n      isReversed,\n      sortBy,\n      goods,\n    } = this.state;\n\n    const visibleGoods = [...goods];\n\n    visibleGoods.sort((a, b) => {\n      switch (sortBy) {\n        case 'alphabet':\n          return a.localeCompare(b);\n\n        case 'length':\n          return a[sortBy] - b[sortBy];\n\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames('button', {\n              'is-info is-light': sortBy !== SortType.ALPABET,\n              'is-info': sortBy === SortType.ALPABET,\n            })}\n            onClick={this.sortAlpha}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button', {\n              'is-success is-light': sortBy !== SortType.LENGTH,\n              'is-success': sortBy === SortType.LENGTH,\n            })}\n            onClick={this.sortLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button', {\n              'is-warning is-light': !isReversed,\n              'is-warning': isReversed,\n            })}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(sortBy || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {visibleGoods.map(good => (\n              <li\n                data-cy=\"Good\"\n                key={good}\n              >\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}